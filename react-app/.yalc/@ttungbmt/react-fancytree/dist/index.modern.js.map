{"version":3,"file":"index.modern.js","sources":["../src/TreeContext.js","../src/FancyTree.js","../src/utils.js"],"sourcesContent":["import { useState, useCallback, useEffect } from 'react';\r\nimport constate from 'constate';\r\nimport { useImmerReducer } from 'use-immer';\r\nimport { filter, includes, keys, map, mapKeys, mapValues, get } from 'lodash';\r\nimport {original} from \"immer\"\r\nimport { toTree } from '@ttungbmt/tree-js';\r\n\r\nconst initialState = {\r\n\tloading: false,\r\n\tids: [],\r\n\tentities: {}\r\n};\r\n\r\nconst updateIds = state => void (state.ids = keys(state.entities))\r\n\r\nconst caseReducers = {\r\n\tsetLoading: (state, { payload }) => state.loading = payload,\r\n\tsetAll: (state, { payload }) => {\r\n\t\tstate.entities = mapKeys(payload, 'id')\r\n\t\tupdateIds(state)\r\n\t},\r\n\tselect: (state, {payload}) => {\r\n\t\tpayload.ids.map(id => state.entities[id].selected = payload.selected)\r\n\t},\r\n\tselectOne: (state, { payload: {ids, selected, siblingIds} }) => {\r\n\t\tsiblingIds.map(id => state.entities[id].selected = !selected)\r\n\t\tids.map(id => state.entities[id].selected = selected)\r\n\t},\r\n\tsetExpand: (state, {payload: id}) => {\r\n\t\tif(state.entities[id]) state.entities[id].expanded = true\r\n\t},\r\n\tsetCollapse: (state, {payload: id}) => {\r\n\t\tif(state.entities[id]) state.entities[id].expanded = false\r\n\t}\r\n};\r\n\r\nconst reducer = (draft, action) => void caseReducers[action.type](draft, action);\r\n\r\nfunction useTree() {\r\n\tconst [state, dispatch] = useImmerReducer(reducer, initialState);\r\n\tconst [tree, setTree] = useState(undefined);\r\n\r\n\tconst actions = useCallback(() => ({\r\n\t\t...mapValues(caseReducers, (action, type) => (payload) => dispatch({ type, payload })),\r\n\t\texpandAll: () => tree.expandAll(),\r\n\t\tcollapseAll: () => tree.expandAll(false),\r\n\t\ttoggleExpandAll: () => tree.visit((node) => node.toggleExpanded()),\r\n\t}), [tree]);\r\n\r\n\treturn {\r\n\t\t...actions(),\r\n\t\ttree,\r\n\t\tsetTree,\r\n\t\tdispatch,\r\n\t\tsource: toTree(state.ids.map(id => state.entities[id])),\r\n\t};\r\n}\r\n\r\nconst [TreeProvider, useTreeContext] = constate(useTree);\r\n\r\nexport {\r\n\tTreeProvider,\r\n\tuseTreeContext\r\n};","import React, { memo, useRef, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport _ from 'lodash';\r\nimport $ from 'jquery';\r\nimport 'jquery-ui'\r\nimport 'jquery.fancytree'\r\nimport 'jquery.fancytree/dist/modules/jquery.fancytree.filter'\r\nimport 'jquery.fancytree/dist/modules/jquery.fancytree.glyph'\r\nimport {useTreeContext} from './TreeContext';\r\n\r\nconst events = ['blurTree', 'create', 'init', 'focusTree', 'restore', 'activate', 'beforeActivate', 'beforeExpand', 'beforeSelect', 'blur', 'click', 'collapse', 'createNode', 'dblclick', 'deactivate', 'expand', 'focus', 'keydown', 'keypress', 'lazyLoad', 'loadChildren', 'loadError', 'postProcess', 'modifyChild', 'renderNode', 'renderTitle', 'select'];\r\n\r\nconst toEventFuncs = (props) => _.chain(events).mapKeys((n) => n).mapValues((n) => (...args) => {\r\n\tlet eventName = `on${_.upperFirst(n)}`;\r\n\tprops[eventName] && props[eventName](...args);\r\n}).value();\r\n\r\nfunction useTreeElement(treeRef, props) {\r\n\tconst { setTree } = useTreeContext()\r\n\r\n\tconst options = _.omit(props.options, events) || {};\r\n\tuseEffect(() => {\r\n\t\tlet $el;\r\n\r\n\t\tif (treeRef.current) {\r\n\t\t\tlet eventFns = toEventFuncs(props);\r\n\r\n\t\t\t$el = $(treeRef.current).fancytree({\r\n\t\t\t\t...eventFns,\r\n\t\t\t\t...options,\r\n\t\t\t\trenderNode: function(event, {node}) {\r\n\t\t\t\t\tlet $el = $(node.span).find('.label-feature-count'),\r\n\t\t\t\t\t\tcount = node.data.count\r\n\r\n\t\t\t\t\tif(count && !$el.length){\r\n\t\t\t\t\t\t$(node.span).append($(`<div class=\"label-feature-count\">${count}</div>`));\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\tsetTree($.ui.fancytree.getTree(treeRef.current))\r\n\t\t}\r\n\t}, []);\r\n}\r\n\r\nconst renderTree = (nodes, key) => {\r\n\tif (_.isArray(nodes))\r\n\t\treturn nodes.map((node, key) => renderTree(node, key + 1))\r\n\r\n\tconst { children, tooltip, title, count, data = {}, ...rest } = nodes\r\n\tconst folder = _.isNil(rest.folder) ? _.isArray(children) && !_.isEmpty(children) : rest.folder\r\n\r\n\treturn (\r\n\t\t<li\r\n\t\t\tkey={key}\r\n\t\t\tid={'ft' + key}\r\n\t\t\ttitle={tooltip}\r\n\t\t\tclassName={clsx('relative', { folder })}\r\n\t\t\tdata-json={JSON.stringify({...rest, ...data})}\r\n\t\t>\r\n\t\t\t{title}\r\n\t\t\t{/*<div className=\"absolute h-full top-0 right-0 \">\r\n\t\t\t\t{data.count && <span className=\"label-feature-count flex items-center px-4 py-2 text-white\" style={{fontSize: 11, backgroundColor: '#29B6F6', borderRadius: 3}}>{data.count}</span>}\r\n\t\t\t</div>*/}\r\n\t\t\t{_.isArray(children) ? (\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t{children.map((node1, key1) => renderTree(node1, key + '.' + (key1 + 1)))}\r\n\t\t\t\t</ul>\r\n\t\t\t) : null}\r\n\t\t</li>\r\n\t)\r\n}\r\n\r\nfunction FancyTree({ id, style, className, children, source, ...props }) {\r\n\tconst treeRef = useRef(null);\r\n\tuseTreeElement(treeRef, props);\r\n\r\n\treturn (\r\n\t\t<div id={id} className={clsx(className)} style={style} ref={treeRef}>\r\n\t\t\t{children ? (\r\n\t\t\t\tchildren\r\n\t\t\t) : (\r\n\t\t\t\t<ul style={{ display: 'none' }}>\r\n\t\t\t\t\t{renderTree(source)}\r\n\t\t\t\t</ul>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nFancyTree.defaultProps = {\r\n\toptions: {\r\n\t\tcheckbox: true, // Show check boxes\r\n\t\tselectMode: 3, // 1:single, 2:multi, 3:multi-hier\r\n\t\tquicksearch: true, // Navigate to next node by typing the first letters\r\n\t\ticon: true, // Display node icons\r\n\t\tclickFolderMode: 3, // 1:activate, 2:expand, 3:activate and expand, 4:activate (dblclick expands)\r\n\r\n\t\tcheckboxAutoHide: false, // Display check boxes on hover only\r\n\t\tdisabled: false, // Disable control\r\n\r\n\t\twide: {\r\n\t\t\ticonWidth: '3em', // Adjust this if @fancy-icon-width != \"16px\"\r\n\t\t\ticonSpacing: '0.5em', // Adjust this if @fancy-icon-spacing != \"3px\"\r\n\t\t\tlabelSpacing: '0.1em', // Adjust this if padding between icon and label != \"3px\"\r\n\t\t\tlevelOfs: '1.5em' // Adjust this if ul padding != \"16px\"\r\n\t\t},\r\n\r\n\t\tfilter: {\r\n\t\t\tautoApply: true, // Re-apply last filter if lazy data is loaded\r\n\t\t\tautoExpand: false, // Expand all branches that contain matches while filtered\r\n\t\t\tcounter: true, // Show a badge with number of matching child nodes near parent icons\r\n\t\t\tfuzzy: false, // Match single characters in order, e.g. 'fb' will match 'FooBar'\r\n\t\t\thideExpandedCounter: true, // Hide counter badge if parent is expanded\r\n\t\t\thideExpanders: false, // Hide expanders if all child nodes are hidden by filter\r\n\t\t\thighlight: true, // Highlight matches by wrapping inside <mark> tags\r\n\t\t\tleavesOnly: false, // Match end nodes only\r\n\t\t\tnodata: true, // Display a 'no data' status node if result is empty\r\n\t\t\tmode: 'dimm' // Grayout unmatched nodes (pass \"hide\" to remove unmatched node instead)\r\n\t\t},\r\n\r\n\t\tchildcounter: {\r\n\t\t\tdeep: true,\r\n\t\t\thideZeros: true,\r\n\t\t\thideExpanded: true\r\n\t\t},\r\n\r\n\t\textensions: [\r\n\t\t\t'filter'\r\n\t\t\t// 'childcounter'\r\n\t\t]\r\n\t}\r\n};\r\n\r\nexport default memo(FancyTree);","export const getToggleFiles = (node) => {\n    if (node.isFolder()) {\n        let children = []\n        node.visit((child) => {\n            !child.isFolder() && children.push(child)\n        })\n        return children\n    }\n    return [node]\n}\n"],"names":["initialState","loading","ids","entities","caseReducers","setLoading","state","payload","setAll","mapKeys","keys","updateIds","select","map","id","selected","selectOne","siblingIds","setExpand","expanded","setCollapse","reducer","draft","action","type","TreeProvider","useTreeContext","constate","dispatch","useImmerReducer","tree","setTree","useState","undefined","actions","useCallback","mapValues","expandAll","collapseAll","toggleExpandAll","visit","node","toggleExpanded","source","toTree","events","renderTree","nodes","key","_","isArray","children","tooltip","title","data","rest","folder","isNil","isEmpty","React","className","clsx","data-json","JSON","stringify","node1","key1","FancyTree","style","props","treeRef","useRef","options","omit","useEffect","current","eventFns","chain","n","args","eventName","upperFirst","value","toEventFuncs","$","fancytree","renderNode","event","$el","span","find","count","length","append","ui","getTree","useTreeElement","ref","display","defaultProps","checkbox","selectMode","quicksearch","icon","clickFolderMode","checkboxAutoHide","disabled","wide","iconWidth","iconSpacing","labelSpacing","levelOfs","filter","autoApply","autoExpand","counter","fuzzy","hideExpandedCounter","hideExpanders","highlight","leavesOnly","nodata","mode","childcounter","deep","hideZeros","hideExpanded","extensions","memo","getToggleFiles","isFolder","child","push"],"mappings":"uzBAOA,MAAMA,EAAe,CACpBC,SAAS,EACTC,IAAK,GACLC,SAAU,IAKLC,EAAe,CACpBC,WAAY,CAACC,GAASC,QAAAA,KAAcD,EAAML,QAAUM,EACpDC,OAAQ,CAACF,GAASC,QAAAA,MACjBD,EAAMH,SAAWM,EAAQF,EAAS,MALlBD,CAAAA,IAAeA,EAAMJ,IAAMQ,EAAKJ,EAAMH,WAMtDQ,CAAUL,IAEXM,OAAQ,CAACN,GAAQC,QAAAA,MAChBA,EAAQL,IAAIW,IAAIC,GAAMR,EAAMH,SAASW,GAAIC,SAAWR,EAAQQ,WAE7DC,UAAW,CAACV,GAASC,SAAUL,IAAAA,EAAKa,SAAAA,EAAUE,WAAAA,OAC7CA,EAAWJ,IAAIC,GAAMR,EAAMH,SAASW,GAAIC,UAAYA,GACpDb,EAAIW,IAAIC,GAAMR,EAAMH,SAASW,GAAIC,SAAWA,IAE7CG,UAAW,CAACZ,GAAQC,QAASO,MACzBR,EAAMH,SAASW,KAAKR,EAAMH,SAASW,GAAIK,UAAW,IAEtDC,YAAa,CAACd,GAAQC,QAASO,MAC3BR,EAAMH,SAASW,KAAKR,EAAMH,SAASW,GAAIK,UAAW,KAIjDE,EAAU,CAACC,EAAOC,KAAgBnB,EAAamB,EAAOC,MAAMF,EAAOC,KAsBlEE,EAAcC,GAAkBC,EApBvC,WACC,MAAOrB,EAAOsB,GAAYC,EAAgBR,EAASrB,IAC5C8B,EAAMC,GAAWC,OAASC,GAE3BC,EAAUC,EAAY,SACxBC,EAAUhC,EAAc,CAACmB,EAAQC,IAAUjB,GAAYqB,EAAS,CAAEJ,KAAAA,EAAMjB,QAAAA,MAC3E8B,UAAW,IAAMP,EAAKO,YACtBC,YAAa,IAAMR,EAAKO,WAAU,GAClCE,gBAAiB,IAAMT,EAAKU,MAAOC,GAASA,EAAKC,oBAC9C,CAACZ,IAEL,YACII,KACHJ,KAAAA,EACAC,QAAAA,EACAH,SAAAA,EACAe,OAAQC,EAAOtC,EAAMJ,IAAIW,IAAIC,GAAMR,EAAMH,SAASW,SC5C9C+B,EAAS,CAAC,WAAY,SAAU,OAAQ,YAAa,UAAW,WAAY,iBAAkB,eAAgB,eAAgB,OAAQ,QAAS,WAAY,aAAc,WAAY,aAAc,SAAU,QAAS,UAAW,WAAY,WAAY,eAAgB,YAAa,cAAe,cAAe,aAAc,cAAe,UAmCjVC,EAAa,CAACC,EAAOC,KAC1B,GAAIC,EAAEC,QAAQH,GACb,OAAOA,EAAMlC,IAAI,CAAC4B,EAAMO,IAAQF,EAAWL,EAAMO,EAAM,IAExD,MAAMG,SAAEA,EAAFC,QAAYA,EAAZC,MAAqBA,EAArBC,KAAmCA,EAAO,IAAgBP,EAATQ,IAASR,iDAC1DS,EAASP,EAAEQ,MAAMF,EAAKC,QAAUP,EAAEC,QAAQC,KAAcF,EAAES,QAAQP,GAAYI,EAAKC,OAEzF,OACCG,sBACCX,IAAKA,EACLlC,GAAI,KAAOkC,EACXK,MAAOD,EACPQ,UAAWC,EAAK,WAAY,CAAEL,OAAAA,IAC9BM,YAAWC,KAAKC,eAAcT,EAASD,KAEtCD,EAIAJ,EAAEC,QAAQC,GACVQ,0BACER,EAAStC,IAAI,CAACoD,EAAOC,IAASpB,EAAWmB,EAAOjB,EAAM,KAAOkB,EAAO,MAEnE,OAKP,SAASC,SAAUrD,GAAEA,EAAFsD,MAAMA,EAANR,UAAaA,EAAbT,SAAwBA,EAAxBR,OAAkCA,KAAW0B,sDAC/D,MAAMC,EAAUC,EAAO,MAGvB,OA5DD,SAAwBD,EAASD,GAChC,MAAMtC,QAAEA,GAAYL,IAEd8C,EAAUvB,EAAEwB,KAAKJ,EAAMG,QAAS3B,IAAW,GACjD6B,EAAU,KAGT,GAAIJ,EAAQK,QAAS,CACpB,IAAIC,EAbeP,CAAAA,GAAUpB,EAAE4B,MAAMhC,GAAQpC,QAASqE,GAAMA,GAAG1C,UAAW0C,GAAM,IAAIC,KACtF,IAAIC,EAAa,KAAI/B,EAAEgC,WAAWH,KAClCT,EAAMW,IAAcX,EAAMW,MAAcD,KACtCG,QAUeC,CAAad,GAEtBe,EAAEd,EAAQK,SAASU,eACrBT,EACAJ,GACHc,WAAY,SAASC,GAAO9C,KAACA,IAC5B,IAAI+C,EAAMJ,EAAE3C,EAAKgD,MAAMC,KAAK,wBAC3BC,EAAQlD,EAAKa,KAAKqC,MAEhBA,IAAUH,EAAII,QAChBR,EAAE3C,EAAKgD,MAAMI,OAAOT,EAAG,oCAAmCO,gBAK7D5D,EAAQqD,EAAEU,GAAGT,UAAUU,QAAQzB,EAAQK,YAEtC,IAiCHqB,CAAe1B,EAASD,GAGvBV,uBAAK7C,GAAIA,EAAI8C,UAAWC,EAAKD,GAAYQ,MAAOA,EAAO6B,IAAK3B,GAC1DnB,GAGAQ,sBAAIS,MAAO,CAAE8B,QAAS,SACpBpD,EAAWH,KAOjBwB,EAAUgC,aAAe,CACxB3B,QAAS,CACR4B,UAAU,EACVC,WAAY,EACZC,aAAa,EACbC,MAAM,EACNC,gBAAiB,EAEjBC,kBAAkB,EAClBC,UAAU,EAEVC,KAAM,CACLC,UAAW,MACXC,YAAa,QACbC,aAAc,QACdC,SAAU,SAGXC,OAAQ,CACPC,WAAW,EACXC,YAAY,EACZC,SAAS,EACTC,OAAO,EACPC,qBAAqB,EACrBC,eAAe,EACfC,WAAW,EACXC,YAAY,EACZC,QAAQ,EACRC,KAAM,QAGPC,aAAc,CACbC,MAAM,EACNC,WAAW,EACXC,cAAc,GAGfC,WAAY,CACX,YAMH,MAAeC,EAAK7D,GCtIP8D,MAAAA,EAAkBxF,IAC3B,GAAIA,EAAKyF,WAAY,CACjB,IAAI/E,EAAW,GAIf,OAHAV,EAAKD,MAAO2F,KACPA,EAAMD,YAAc/E,EAASiF,KAAKD,KAEhChF,EAEX,MAAO,CAACV"}